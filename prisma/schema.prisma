// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  email     String?   @unique
  emailVerified DateTime?
  hashedPassword String?
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  favoriteIds String[] @db.ObjectId
  sessions Session[]
  accounts Account[]
}

model Account {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  provider  String
  type      String
  providerAccountId String
  refresh_token String?
  access_token String?
  expires_in Int?
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  expires   DateTime
  sessionToken String @unique
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token     String  @unique
  expires   DateTime
  @@unique([identifier, token])
}

model Movie {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  description String
  videoUrl  String
  genre     String
  thumbnail String
  duration  String
}